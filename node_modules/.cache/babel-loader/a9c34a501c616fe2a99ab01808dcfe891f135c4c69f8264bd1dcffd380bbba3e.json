{"ast":null,"code":"import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nfunction addHoverEvent(node, isActive) {\n  const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n  const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n  const handleEvent = (event, info) => {\n    if (event.pointerType === \"touch\" || isDragActive()) return;\n    const props = node.getProps();\n    if (node.animationState && props.whileHover) {\n      node.animationState.setActive(\"whileHover\", isActive);\n    }\n    const callback = props[callbackName];\n    if (callback) callback(event, info);\n  };\n  return addPointerEvent(node.current, eventName, handleEvent, {\n    passive: !node.getProps()[callbackName]\n  });\n}\nclass HoverGesture extends Feature {\n  mount() {\n    this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n  }\n  unmount() {}\n}\nexport { HoverGesture };","map":{"version":3,"names":["addPointerEvent","pipe","isDragActive","Feature","addHoverEvent","node","isActive","eventName","callbackName","handleEvent","event","info","pointerType","props","getProps","animationState","whileHover","setActive","callback","current","passive","HoverGesture","mount","unmount"],"sources":["C:/Users/16462/Documents/YouthLifeSupport/node_modules/framer-motion/dist/es/gestures/hover.mjs"],"sourcesContent":["import { addPointerEvent } from '../events/add-pointer-event.mjs';\r\nimport { pipe } from '../utils/pipe.mjs';\r\nimport { isDragActive } from './drag/utils/lock.mjs';\r\nimport { Feature } from '../motion/features/Feature.mjs';\r\n\r\nfunction addHoverEvent(node, isActive) {\r\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\r\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\r\n    const handleEvent = (event, info) => {\r\n        if (event.pointerType === \"touch\" || isDragActive())\r\n            return;\r\n        const props = node.getProps();\r\n        if (node.animationState && props.whileHover) {\r\n            node.animationState.setActive(\"whileHover\", isActive);\r\n        }\r\n        const callback = props[callbackName];\r\n        if (callback)\r\n            callback(event, info);\r\n    };\r\n    return addPointerEvent(node.current, eventName, handleEvent, {\r\n        passive: !node.getProps()[callbackName],\r\n    });\r\n}\r\nclass HoverGesture extends Feature {\r\n    mount() {\r\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { HoverGesture };\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,iCAAiC;AACjE,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,OAAO,QAAQ,gCAAgC;AAExD,SAASC,aAAaA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACnC,MAAMC,SAAS,GAAGD,QAAQ,GAAG,cAAc,GAAG,cAAc;EAC5D,MAAME,YAAY,GAAGF,QAAQ,GAAG,cAAc,GAAG,YAAY;EAC7D,MAAMG,WAAW,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IACjC,IAAID,KAAK,CAACE,WAAW,KAAK,OAAO,IAAIV,YAAY,CAAC,CAAC,EAC/C;IACJ,MAAMW,KAAK,GAAGR,IAAI,CAACS,QAAQ,CAAC,CAAC;IAC7B,IAAIT,IAAI,CAACU,cAAc,IAAIF,KAAK,CAACG,UAAU,EAAE;MACzCX,IAAI,CAACU,cAAc,CAACE,SAAS,CAAC,YAAY,EAAEX,QAAQ,CAAC;IACzD;IACA,MAAMY,QAAQ,GAAGL,KAAK,CAACL,YAAY,CAAC;IACpC,IAAIU,QAAQ,EACRA,QAAQ,CAACR,KAAK,EAAEC,IAAI,CAAC;EAC7B,CAAC;EACD,OAAOX,eAAe,CAACK,IAAI,CAACc,OAAO,EAAEZ,SAAS,EAAEE,WAAW,EAAE;IACzDW,OAAO,EAAE,CAACf,IAAI,CAACS,QAAQ,CAAC,CAAC,CAACN,YAAY;EAC1C,CAAC,CAAC;AACN;AACA,MAAMa,YAAY,SAASlB,OAAO,CAAC;EAC/BmB,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACC,OAAO,GAAGtB,IAAI,CAACG,aAAa,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAAC,EAAED,aAAa,CAAC,IAAI,CAACC,IAAI,EAAE,KAAK,CAAC,CAAC;EACxF;EACAkB,OAAOA,CAAA,EAAG,CAAE;AAChB;AAEA,SAASF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}